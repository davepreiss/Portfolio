// This code hides or displays tiles depending on which of the menu buttons are pressed - All - PROFESSIONAL - OR - PERSONAL.
document.getElementById("allbutton").onclick = function() {
  clickall();
};

function clickall() {
  var y = document.getElementsByClassName("all");
  var i;
  for (i = 0; i < y.length; i++) {
    y[i].style.display = "inline";
  }
}

document.getElementById("personalbutton").onclick = function() {
  clickPersonal();
};

function clickPersonal() {
  var x = document.getElementsByClassName("professional");
  var i;
  for (i = 0; i < x.length; i++) {
    x[i].style.display = "none";
  }
  var z = document.getElementsByClassName("personal");
  i = 0;
  for (i = 0; i < z.length; i++) {
    z[i].style.display = "inline";
  }
}

document.getElementById("professionalbutton").onclick = function() {
  clickProfessional();
};

function clickProfessional() {
  var z = document.getElementsByClassName("personal");
  var i;
  for (i = 0; i < z.length; i++) {
    z[i].style.display = "none";
  }
  var x = document.getElementsByClassName("professional");
  i = 0;
  for (i = 0; i < x.length; i++) {
    x[i].style.display = "inline";
  }
}

//-----------------------Onclicks and Modal------------------------------------------------------------
var closebutton = document.getElementById("closebutton");
var myModal = document.getElementById("myModal");
var filter = document.getElementById("filter");
var tiles = document.getElementsByClassName("tile");
var images = document.getElementsByClassName("thumbnail");
var thumbSubs = document.getElementsByClassName("thumbnailSubText");
var projectTitle = document.getElementById("projectTitle");
var projectDescription = document.getElementById("projectDescription");
var projectImage = document.getElementById("projectImage");
var projectFirstLine = document.getElementById("projectFirstLine");

//Stores all of our tile's image widths which are generated by auto and applies those to each figcaption so that they can be used to generate ellipsis

//Ive added the hideCaptions and showCaptions functions below after there seemed to be a timing issue with capturing and setting tile width. Some tiles would be properly ellipsed and others not, whereas now they are all hidden until their proper width can be found and set.

function hideCaptions() {
  var captions = document.getElementsByClassName("thumbnailSubText");
  for (var i = 0; i < captions.length; i++) {
    captions[i].style.display = "none";
  }
}

function showCaptions() {
  var captions = document.getElementsByClassName("thumbnailSubText");
  for (var i = 0; i < captions.length; i++) {
    captions[i].style.display = "inline-block";
  }
}

hideCaptions();

for (var i = 0; i < images.length; i++) {
  var tileWidth = images[i].clientWidth - 10;
  thumbSubs[i].style.width = tileWidth + "px";
}

showCaptions();

//Calls the revert function if the escape key is pressed
document.onkeydown = function(evt) {
  evt = evt || window.event;
  if (evt.keyCode == 27) {
    revert();
  }
};

//This function displays our modal and changes the tile layout to appear to the right of the modal and unifies tiles dimensions in a column.
var showModal = function() {
  for (var i = 0; i < images.length; i++) {
    var tileWidth = images[i].clientWidth - 10;
    images[i].style.width = 250 + "px";
    images[i].style.height = "auto";
    tiles[i].style.height = "auto";
  }

  for (var i = 0; i < images.length; i++) {
    var tileWidth = images[i].clientWidth - 10;
    thumbSubs[i].style.width = tileWidth + "px";
  }

  document.getElementById("tiles").style.width = "300px";

  document.getElementById("tiles").style.paddingLeft = "750px";
  myModal.style.display = "block";

// Grab all of the info from the selected tile to populate our modal  
  var modalHeader = this.children[1].children[0].innerHTML;
  projectTitle.innerHTML = modalHeader;
  
  var modalImage = this.children[0];
  projectImage.src = modalImage.src;
  
  var modalBody = this.children[1].children[1].innerHTML;
  projectDescription.innerHTML = modalBody;
  
  (function smoothscroll(){
    var currentScroll = document.documentElement.scrollTop || document.body.scrollTop;
    if (currentScroll > 0) {
         window.requestAnimationFrame(smoothscroll);
         window.scrollTo (0,currentScroll - (currentScroll/5));
    }
})();
smoothscroll();
};


for (var i = 0; i < tiles.length; i++) {
  tiles[i].addEventListener("click", showModal, false);
}



//Here we need a funtion to revert back all of the changes we made to our tiles in order to display them as they load initially
var revert = function() {
  
  document.getElementById("tiles").style.width = "auto";
  document.getElementById("tiles").style.paddingLeft = "0px";
  myModal.style.display = "none";

  for (var i = 0; i < images.length; i++) {
    images[i].style.width = "auto";
    images[i].style.height = "187px";
    tiles[i].style.height = "250px";
  }

  for (var i = 0; i < images.length; i++) {
    var tileWidth = images[i].clientWidth - 10;
    thumbSubs[i].style.width = tileWidth + "px";
  }
  document.getElementById("tiles").style.width = "auto";
};

closebutton.onclick = function() {
  revert();
};
